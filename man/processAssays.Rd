% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/processAssays.R
\name{processAssays}
\alias{processAssays}
\title{Processing SingleCellExperiment to dreamletProcessedData}
\usage{
processAssays(
  sceObj,
  formula,
  assays = assayNames(sceObj),
  min.cells = 10,
  isCounts = TRUE,
  normalize.method = "TMM",
  min.count = 10,
  pmetadata = NULL,
  pkeys = NULL,
  useCountsWeights = TRUE,
  quiet = FALSE,
  BPPARAM = SerialParam(),
  ...
)
}
\arguments{
\item{sceObj}{SingleCellExperiment object}

\item{formula}{regression formula for differential expression analysis}

\item{assays}{array of assay names to include in analysis. Defaults to \code{assayNames(sceObj)}}

\item{min.cells}{minimum number of observed cells for a sample to be included in the analysis}

\item{isCounts}{logical, indicating if data is raw counts}

\item{normalize.method}{normalization method to be used by \code{calcNormFactors}}

\item{min.count}{min.count used by \code{edgeR::filterByExpr}}

\item{pmetadata}{sample-specific metadata the varies across cell types.  This is merged with \code{colData(sceObj)} for each assay to make variables accessable to the formula}

\item{pkeys}{array of two strings indicating sample identifier and cell type identifier columns in pmetadata}

\item{useCountsWeights}{use cell count weights}

\item{quiet}{show messages}

\item{BPPARAM}{parameters for parallel evaluation}

\item{...}{other arguments passed to \code{dream}}
}
\value{
Object of class \code{dreamletProcessedData} storing voom-style normalized expression data
}
\description{
For raw counts, estimate precision weights using linear mixed model weighting by number of cells observed for each sample.  For normalized data, only weight by number of cells
}
\examples{
library(muscat)
library(SingleCellExperiment)

data(example_sce)

# create pseudobulk for each sample and cell cluster
pb <- aggregateToPseudoBulk(example_sce, 
   assay = "counts",    
   cluster_id = 'cluster_id', 
   sample_id = 'sample_id',
   verbose=FALSE)

# voom-style normalization
res.proc = processAssays( pb, ~ group_id)

# Differential expression analysis within each assay,
# evaluated on the voom normalized data 
res.dl = dreamlet( res.proc, ~ group_id)

}
