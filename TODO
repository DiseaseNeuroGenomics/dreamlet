

August 25:

	Feed contrasts to dreamlet()
	
	type definition for zenith_gsa


	** cell counts are used as weighs in voom.
	if not counts, they are used as weights directly
	is this equivalent is the formula is just and intercept?


	Make I(x^2) formula work

	include checkFormula in variancePartition


	DONE: remove isCounts

	DONE: store extract pmetadata with metadata
	
	DONE: pmetadata is given to processAssays(). Need to store it in result
	and use it in fitVarPart() and dreamlet()






August 19,
	do R CMD check to resolve issues with Generics
	plotVarPart() should take arguments ncolumns
	zenith_gsa should work on list of cell types of 1 cell type 



August 18: DONE
	- Allow class dreamletProcessedData to be subsetted to extract subset of assays
	- plotVoom should work on one or many assays using class names
	- Extend the following plots to single or multiple
		plotVoom()
		plotVarPart()
		plotVolcano()




May 14,
	Include number of expressed genes, or other QC as covariates


Authors@R: c(person("Gabriel", "Hoffman", role = c("aut", "cre"), email = "gabriel.hoffman@mssm.edu"))

April 2,
	handle contrasts L if missing
	should dreamletProcessedData be a SingleCellExperiment?
	graceful printing of each object
	show voom plots
	how should residual covariance be weighted?


March 30, 2021
	dreamlet: dream for single cell analysis
		weight by both reads and cell number
		like muscat, except per-sample weights are used by voomWithDreamWeights
			instead of lmFit: https://github.com/HelenaLC/muscat/blob/c93966305b1317b0caf5c6eb374826d6432b4a0a/R/utils-pbDS.R#L104
		Should I weight voom or the lmFit step?

# muscat is good, but random effects are especially important for multiplexed
# 10X datasets because batches are only 6 samples.
# Weighting by samples: the variance of binomial fraction is proportional to 1/n

# depends on limma, edgeR, variancePartition
dreamlet = function(snObj, form){

	# for each cell type
	fitList = lapply( assays(snObj), function(cellType){
		
		# get data for this cell type
		geneExpr = assay(snObj, cellType)

		# get samples with enough cells
		# filter genes
		geneExpr = filterByExpr(geneExpr)

		# per sample weights
		w = weights by cell types

		# need to adapt voomByDreamWeights to allow per sample weights
		vobj = voomByDreamWeights( geneExpr, form, info, weights=w)

		# need to adapt dream to allow per sample weights
		fit = dream(vobj, form, info, weights=w)

		# finish eBayes
		# only use trend if precion weights are not available
		fit = eBayes(fit, robust, trend)

		# return full results like muscat does
		fit
	})

	# Add ashr on the results of topTable

	fitList
}

