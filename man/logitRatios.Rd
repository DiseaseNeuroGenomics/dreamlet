% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/logitRatios.R
\name{logitRatios}
\alias{logitRatios}
\alias{logitRatios,matrix-method}
\alias{logitRatios,SingleCellExperiment-method}
\title{Compute logit ratios and their precisions}
\usage{
logitRatios(data, pc = 0.25)

\S4method{logitRatios}{matrix}(data, pc = 0.25)

\S4method{logitRatios}{SingleCellExperiment}(data, pc = 0.25)
}
\arguments{
\item{data}{matrix of counts where rows are samples and columns are categories, or object that this information can be extracted from}

\item{pc}{pseudocount}
}
\value{
\code{EList} defined by \link{limma} storing logit ratio in \code{E} and precisions in \code{weights}
}
\description{
Compute logit ratios and their precisions given a matrix of counts
}
\details{
Let \eqn{c1 \sim \Gamma(\alpha, 1)}, \eqn{c2 \sim \Gamma(\beta, 1)} and \eqn{x = \frac{c1}{c2}}, then \eqn{x \sim B(\alpha, \beta)}, the expected value of \eqn{x} is \eqn{E[x] = \frac{\alpha}{\beta}}.  The expected log is \eqn{E[\log(x)] = \psi(\alpha) - \psi(\alpha - \beta)}, where \eqn{\psi()} is the \code{digamma()} function.  

The variance of the logit transformed fraction is \eqn{var[log(\frac{x}{1-x})] = \psi_1(\alpha) + \psi_1(\beta)}, where \eqn{\psi_1()} is the \code{trigamma()} function. For sufficiently large values of \eqn{\alpha} and \eqn{\beta}, this is well approximated by \eqn{1/\alpha + 1/\beta}.

The counts producing these ratios are discrete.  But approximating the counts by \eqn{\Gamma(\lambda, 1)} instead of \eqn{Pois(\lambda)} matches the first two moments exactly.

See \url{https://en.wikipedia.org/wiki/Beta_distribution#Moments_of_logarithmically_transformed_random_variables}

Since \code{log()} and \code{trigamma()} are not defined at zero, add a pseudocount of 0.25.
}
